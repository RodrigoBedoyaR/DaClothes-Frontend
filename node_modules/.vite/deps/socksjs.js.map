{
  "version": 3,
  "sources": ["browser-external:stream", "browser-external:util", "browser-external:tls", "../../ipaddr.js/lib/ipaddr.js", "../../socksjs/socks.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"stream\" has been externalized for browser compatibility. Cannot access \"stream.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"util\" has been externalized for browser compatibility. Cannot access \"util.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"tls\" has been externalized for browser compatibility. Cannot access \"tls.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "(function() {\n  var expandIPv6, ipaddr, ipv4Part, ipv4Regexes, ipv6Part, ipv6Regexes, matchCIDR, root;\n\n  ipaddr = {};\n\n  root = this;\n\n  if ((typeof module !== \"undefined\" && module !== null) && module.exports) {\n    module.exports = ipaddr;\n  } else {\n    root['ipaddr'] = ipaddr;\n  }\n\n  matchCIDR = function(first, second, partSize, cidrBits) {\n    var part, shift;\n    if (first.length !== second.length) {\n      throw new Error(\"ipaddr: cannot match CIDR for objects with different lengths\");\n    }\n    part = 0;\n    while (cidrBits > 0) {\n      shift = partSize - cidrBits;\n      if (shift < 0) {\n        shift = 0;\n      }\n      if (first[part] >> shift !== second[part] >> shift) {\n        return false;\n      }\n      cidrBits -= partSize;\n      part += 1;\n    }\n    return true;\n  };\n\n  ipaddr.subnetMatch = function(address, rangeList, defaultName) {\n    var rangeName, rangeSubnets, subnet, _i, _len;\n    if (defaultName == null) {\n      defaultName = 'unicast';\n    }\n    for (rangeName in rangeList) {\n      rangeSubnets = rangeList[rangeName];\n      if (toString.call(rangeSubnets[0]) !== '[object Array]') {\n        rangeSubnets = [rangeSubnets];\n      }\n      for (_i = 0, _len = rangeSubnets.length; _i < _len; _i++) {\n        subnet = rangeSubnets[_i];\n        if (address.match.apply(address, subnet)) {\n          return rangeName;\n        }\n      }\n    }\n    return defaultName;\n  };\n\n  ipaddr.IPv4 = (function() {\n    function IPv4(octets) {\n      var octet, _i, _len;\n      if (octets.length !== 4) {\n        throw new Error(\"ipaddr: ipv4 octet count should be 4\");\n      }\n      for (_i = 0, _len = octets.length; _i < _len; _i++) {\n        octet = octets[_i];\n        if (!((0 <= octet && octet <= 255))) {\n          throw new Error(\"ipaddr: ipv4 octet is a byte\");\n        }\n      }\n      this.octets = octets;\n    }\n\n    IPv4.prototype.kind = function() {\n      return 'ipv4';\n    };\n\n    IPv4.prototype.toString = function() {\n      return this.octets.join(\".\");\n    };\n\n    IPv4.prototype.toByteArray = function() {\n      return this.octets.slice(0);\n    };\n\n    IPv4.prototype.match = function(other, cidrRange) {\n      if (other.kind() !== 'ipv4') {\n        throw new Error(\"ipaddr: cannot match ipv4 address with non-ipv4 one\");\n      }\n      return matchCIDR(this.octets, other.octets, 8, cidrRange);\n    };\n\n    IPv4.prototype.SpecialRanges = {\n      broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n      multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n      linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n      loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n      \"private\": [[new IPv4([10, 0, 0, 0]), 8], [new IPv4([172, 16, 0, 0]), 12], [new IPv4([192, 168, 0, 0]), 16]],\n      reserved: [[new IPv4([192, 0, 0, 0]), 24], [new IPv4([192, 0, 2, 0]), 24], [new IPv4([192, 88, 99, 0]), 24], [new IPv4([198, 51, 100, 0]), 24], [new IPv4([203, 0, 113, 0]), 24], [new IPv4([240, 0, 0, 0]), 4]]\n    };\n\n    IPv4.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv4.prototype.toIPv4MappedAddress = function() {\n      return ipaddr.IPv6.parse(\"::ffff:\" + (this.toString()));\n    };\n\n    return IPv4;\n\n  })();\n\n  ipv4Part = \"(0?\\\\d+|0x[a-f0-9]+)\";\n\n  ipv4Regexes = {\n    fourOctet: new RegExp(\"^\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"$\", 'i'),\n    longValue: new RegExp(\"^\" + ipv4Part + \"$\", 'i')\n  };\n\n  ipaddr.IPv4.parser = function(string) {\n    var match, parseIntAuto, part, shift, value;\n    parseIntAuto = function(string) {\n      if (string[0] === \"0\" && string[1] !== \"x\") {\n        return parseInt(string, 8);\n      } else {\n        return parseInt(string);\n      }\n    };\n    if (match = string.match(ipv4Regexes.fourOctet)) {\n      return (function() {\n        var _i, _len, _ref, _results;\n        _ref = match.slice(1, 6);\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          part = _ref[_i];\n          _results.push(parseIntAuto(part));\n        }\n        return _results;\n      })();\n    } else if (match = string.match(ipv4Regexes.longValue)) {\n      value = parseIntAuto(match[1]);\n      return ((function() {\n        var _i, _results;\n        _results = [];\n        for (shift = _i = 0; _i <= 24; shift = _i += 8) {\n          _results.push((value >> shift) & 0xff);\n        }\n        return _results;\n      })()).reverse();\n    } else {\n      return null;\n    }\n  };\n\n  ipaddr.IPv6 = (function() {\n    function IPv6(parts) {\n      var part, _i, _len;\n      if (parts.length !== 8) {\n        throw new Error(\"ipaddr: ipv6 part count should be 8\");\n      }\n      for (_i = 0, _len = parts.length; _i < _len; _i++) {\n        part = parts[_i];\n        if (!((0 <= part && part <= 0xffff))) {\n          throw new Error(\"ipaddr: ipv6 part should fit to two octets\");\n        }\n      }\n      this.parts = parts;\n    }\n\n    IPv6.prototype.kind = function() {\n      return 'ipv6';\n    };\n\n    IPv6.prototype.toString = function() {\n      var compactStringParts, part, pushPart, state, stringParts, _i, _len;\n      stringParts = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.parts;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          part = _ref[_i];\n          _results.push(part.toString(16));\n        }\n        return _results;\n      }).call(this);\n      compactStringParts = [];\n      pushPart = function(part) {\n        return compactStringParts.push(part);\n      };\n      state = 0;\n      for (_i = 0, _len = stringParts.length; _i < _len; _i++) {\n        part = stringParts[_i];\n        switch (state) {\n          case 0:\n            if (part === '0') {\n              pushPart('');\n            } else {\n              pushPart(part);\n            }\n            state = 1;\n            break;\n          case 1:\n            if (part === '0') {\n              state = 2;\n            } else {\n              pushPart(part);\n            }\n            break;\n          case 2:\n            if (part !== '0') {\n              pushPart('');\n              pushPart(part);\n              state = 3;\n            }\n            break;\n          case 3:\n            pushPart(part);\n        }\n      }\n      if (state === 2) {\n        pushPart('');\n        pushPart('');\n      }\n      return compactStringParts.join(\":\");\n    };\n\n    IPv6.prototype.toByteArray = function() {\n      var bytes, part, _i, _len, _ref;\n      bytes = [];\n      _ref = this.parts;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        part = _ref[_i];\n        bytes.push(part >> 8);\n        bytes.push(part & 0xff);\n      }\n      return bytes;\n    };\n\n    IPv6.prototype.toNormalizedString = function() {\n      var part;\n      return ((function() {\n        var _i, _len, _ref, _results;\n        _ref = this.parts;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          part = _ref[_i];\n          _results.push(part.toString(16));\n        }\n        return _results;\n      }).call(this)).join(\":\");\n    };\n\n    IPv6.prototype.match = function(other, cidrRange) {\n      if (other.kind() !== 'ipv6') {\n        throw new Error(\"ipaddr: cannot match ipv6 address with non-ipv6 one\");\n      }\n      return matchCIDR(this.parts, other.parts, 16, cidrRange);\n    };\n\n    IPv6.prototype.SpecialRanges = {\n      unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n      linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n      multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n      loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n      uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n      ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n      rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n      rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n      '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n      teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n      reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\n    };\n\n    IPv6.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv6.prototype.isIPv4MappedAddress = function() {\n      return this.range() === 'ipv4Mapped';\n    };\n\n    IPv6.prototype.toIPv4Address = function() {\n      var high, low, _ref;\n      if (!this.isIPv4MappedAddress()) {\n        throw new Error(\"ipaddr: trying to convert a generic ipv6 address to ipv4\");\n      }\n      _ref = this.parts.slice(-2), high = _ref[0], low = _ref[1];\n      return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n    };\n\n    return IPv6;\n\n  })();\n\n  ipv6Part = \"(?:[0-9a-f]+::?)+\";\n\n  ipv6Regexes = {\n    \"native\": new RegExp(\"^(::)?(\" + ipv6Part + \")?([0-9a-f]+)?(::)?$\", 'i'),\n    transitional: new RegExp((\"^((?:\" + ipv6Part + \")|(?:::)(?:\" + ipv6Part + \")?)\") + (\"\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"$\"), 'i')\n  };\n\n  expandIPv6 = function(string, parts) {\n    var colonCount, lastColon, part, replacement, replacementCount;\n    if (string.indexOf('::') !== string.lastIndexOf('::')) {\n      return null;\n    }\n    colonCount = 0;\n    lastColon = -1;\n    while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n      colonCount++;\n    }\n    if (string[0] === ':') {\n      colonCount--;\n    }\n    if (string[string.length - 1] === ':') {\n      colonCount--;\n    }\n    replacementCount = parts - colonCount;\n    replacement = ':';\n    while (replacementCount--) {\n      replacement += '0:';\n    }\n    string = string.replace('::', replacement);\n    if (string[0] === ':') {\n      string = string.slice(1);\n    }\n    if (string[string.length - 1] === ':') {\n      string = string.slice(0, -1);\n    }\n    return (function() {\n      var _i, _len, _ref, _results;\n      _ref = string.split(\":\");\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        part = _ref[_i];\n        _results.push(parseInt(part, 16));\n      }\n      return _results;\n    })();\n  };\n\n  ipaddr.IPv6.parser = function(string) {\n    var match, parts;\n    if (string.match(ipv6Regexes['native'])) {\n      return expandIPv6(string, 8);\n    } else if (match = string.match(ipv6Regexes['transitional'])) {\n      parts = expandIPv6(match[1].slice(0, -1), 6);\n      if (parts) {\n        parts.push(parseInt(match[2]) << 8 | parseInt(match[3]));\n        parts.push(parseInt(match[4]) << 8 | parseInt(match[5]));\n        return parts;\n      }\n    }\n    return null;\n  };\n\n  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) {\n    return this.parser(string) !== null;\n  };\n\n  ipaddr.IPv4.isValid = ipaddr.IPv6.isValid = function(string) {\n    var e;\n    try {\n      new this(this.parser(string));\n      return true;\n    } catch (_error) {\n      e = _error;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.parse = ipaddr.IPv6.parse = function(string) {\n    var parts;\n    parts = this.parser(string);\n    if (parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(parts);\n  };\n\n  ipaddr.isValid = function(string) {\n    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n  };\n\n  ipaddr.parse = function(string) {\n    if (ipaddr.IPv6.isIPv6(string)) {\n      return ipaddr.IPv6.parse(string);\n    } else if (ipaddr.IPv4.isIPv4(string)) {\n      return ipaddr.IPv4.parse(string);\n    } else {\n      throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 format\");\n    }\n  };\n\n  ipaddr.process = function(string) {\n    var addr;\n    addr = this.parse(string);\n    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n      return addr.toIPv4Address();\n    } else {\n      return addr;\n    }\n  };\n\n}).call(this);\n", "var stream  = require('stream'),\r\n    util    = require('util'),\r\n    net     = require('net'),\r\n    tls     = require('tls'),\r\n    ipaddr  = require('ipaddr.js');\r\n\r\nvar SocksConnection = function (remote_options, socks_options) {\r\n    var that = this;\r\n\r\n    stream.Duplex.call(this);\r\n\r\n    this.remote_options = defaults(remote_options, {\r\n        host: 'localhost',\r\n        ssl: false,\r\n        rejectUnauthorized: false\r\n    });\r\n    socks_options = defaults(socks_options, {\r\n        localAddress: '0.0.0.0',\r\n        allowHalfOpen: false,\r\n        host: 'localhost',\r\n        port: 1080,\r\n        user: null,\r\n        pass: null\r\n    });\r\n\r\n    this._socksSetup = false;\r\n\r\n    this.socksAddress = null;\r\n    this.socksPort = null;\r\n\r\n    this.socksSocket = net.createConnection({\r\n        host: socks_options.host,\r\n        port: socks_options.port,\r\n        localAddress: socks_options.localAddress,\r\n        allowHalfOpen: socks_options.allowHalfOpen\r\n    }, socksConnected.bind(this, !(!socks_options.user)));\r\n\r\n    this.socksSocket.on('error', function (err) {\r\n        that.emit('error', err);\r\n    });\r\n\r\n    socksAuth.call(this, {user: socks_options.user, pass: socks_options.pass});\r\n\r\n    this.outSocket = this.socksSocket;\r\n};\r\n\r\nutil.inherits(SocksConnection, stream.Duplex);\r\n\r\nSocksConnection.connect = function (remote_options, socks_options, connection_listener) {\r\n    var socks_connection = new SocksConnection(remote_options, socks_options);\r\n    if (typeof connection_listener === 'function') {\r\n        socks_connection.on('connect', connection_listener);\r\n    }\r\n    return socks_connection;\r\n};\r\n\r\nSocksConnection.prototype._read = function () {\r\n    var data;\r\n    if (this._socksSetup) {\r\n        while ((data = this.outSocket.read()) !== null) {\r\n            if ((this.push(data)) === false) {\r\n                break;\r\n            }\r\n        }\r\n    } else {\r\n        this.push('');\r\n    }\r\n};\r\n\r\nSocksConnection.prototype._write = function (chunk, encoding, callback) {\r\n    if (this._socksSetup) {\r\n        this.outSocket.write(chunk, 'utf8', callback);\r\n    } else {\r\n        callback(\"Not connected\");\r\n    }\r\n};\r\n\r\nSocksConnection.prototype.dispose = function () {\r\n    this.outSocket.destroy();\r\n    this.outSocket.removeAllListeners();\r\n    if (this.outSocket !== this.socksSocket) {\r\n        this.socksSocket.destroy();\r\n        this.socksSocket.removeAllListeners();\r\n    }\r\n    this.removeAllListeners();\r\n};\r\n\r\nvar getData = function (socket, bytes, callback) {\r\n    var dataReady = function () {\r\n        var data = socket.read(bytes);\r\n        if (data !== null) {\r\n            socket.removeListener('readable', dataReady);\r\n            callback(data);\r\n        } else {\r\n            socket.on('readable', dataReady);\r\n        }\r\n    };\r\n    dataReady();\r\n};\r\n\r\nvar socksConnected = function (auth) {\r\n    if (auth) {\r\n        this.socksSocket.write('\\x05\\x02\\x02\\x00'); // SOCKS version 5, supporting two auth methods\r\n                                                    // username/password and 'no authentication'\r\n    } else {\r\n        this.socksSocket.write('\\x05\\x01\\x00');     // SOCKS version 5, only supporting 'no auth' scheme\r\n    }\r\n\r\n};\r\n\r\nvar socksAuth = function (auth) {\r\n    var that = this;\r\n    getData(this.socksSocket, 2, function (data) {\r\n        if (data.readUInt8(0) !== 5) {\r\n            that.emit('error', 'Only SOCKS version 5 is supported');\r\n            that.socksSocket.destroy();\r\n            return;\r\n        }\r\n        switch (data.readUInt8(1)) {\r\n        case 255:\r\n            that.emit('error', 'SOCKS: No acceptable authentication methods');\r\n            that.socksSocket.destroy();\r\n            return;\r\n        case 2:\r\n            that.socksSocket.write(Buffer.concat([\r\n                new Buffer([1]),\r\n                new Buffer([Buffer.byteLength(auth.user)]),\r\n                new Buffer(auth.user),\r\n                new Buffer([Buffer.byteLength(auth.pass)]),\r\n                new Buffer(auth.pass)\r\n            ]));\r\n            socksAuthStatus.call(that);\r\n            break;\r\n        default:\r\n            socksRequest.call(that, that.remote_options.host, that.remote_options.port);\r\n        }\r\n    });\r\n};\r\n\r\nvar socksAuthStatus = function (data) {\r\n    var that = this;\r\n    getData(this.socksSocket, 2, function (data) {\r\n        if (data.readUInt8(1) === 0) {\r\n            socksRequest.call(that, that.remote_options.host, that.remote_options.port);\r\n        } else {\r\n            that.emit('error', 'SOCKS: Authentication failed');\r\n            that.socksSocket.destroy();\r\n        }\r\n    });\r\n};\r\n\r\nvar socksRequest = function (host, port) {\r\n    var header, type, hostBuf, portBuf;\r\n    if (net.isIP(host)) {\r\n        if (net.isIPv4(host)) {\r\n            type = new Buffer([1]);\r\n        } else if (net.isIPv6(host)) {\r\n            type = new Buffer([4]);\r\n        }\r\n        hostBuf = new Buffer(ipaddr.parse(host).toByteArray());\r\n    } else {\r\n        type = new Buffer([3]);\r\n        hostBuf = new Buffer(host);\r\n        hostBuf = Buffer.concat([new Buffer([Buffer.byteLength(host)]), hostBuf]);\r\n    }\r\n    header = new Buffer([5, 1, 0]);\r\n    portBuf = new Buffer(2);\r\n    portBuf.writeUInt16BE(port, 0);\r\n    this.socksSocket.write(Buffer.concat([header, type, hostBuf, portBuf]));\r\n    socksReply.call(this);\r\n};\r\n\r\nvar socksReply = function (data) {\r\n    var that = this;\r\n    getData(this.socksSocket, 4, function (data) {\r\n        var status, err, cont;\r\n\r\n        cont = function (addr, port) {\r\n            that.socksAddress = addr;\r\n            that.socksPort = port;\r\n\r\n            if (that.remote_options.ssl) {\r\n                startTLS.call(that);\r\n            } else {\r\n                proxyData.call(that);\r\n                that.emit('connect');\r\n            }\r\n        };\r\n        status = data.readUInt8(1);\r\n        if (status === 0) {\r\n            switch(data.readUInt8(3)) {\r\n            case 1:\r\n                getData(that.socksSocket, 6, function (data2) {\r\n                    var addr = '', port, i;\r\n                    for (i = 0; i < 4; i++) {\r\n                        if (i !== 0) {\r\n                            addr += '.';\r\n                        }\r\n                        addr += data2.readUInt8(i).toString();\r\n                    }\r\n                    port = data2.readUInt16BE(4);\r\n                    cont(addr, port);\r\n                });\r\n                break;\r\n            case 3:\r\n                getData(that.socksSocket, 1, function (data2) {\r\n                    var length = data2.readUInt8(0);\r\n                    getData(that.socksSocket, length + 2, function (data3) {\r\n                        var addr, port;\r\n                        addr = (data3.slice(0, -2)).toString();\r\n                        port = data3.readUInt16BE(length);\r\n                        cont(addr, port);\r\n                    });\r\n                });\r\n                break;\r\n            case 4:\r\n                getData(that.socksSocket, 18, function (data2) {\r\n                    var addr = '', port, i;\r\n                    for (i = 0; i < 16; i++) {\r\n                        if (i !== 0) {\r\n                            addr += ':';\r\n                        }\r\n                        addr += data2.readUInt8(i);\r\n                    }\r\n                    port = data2.readUInt16BE(16);\r\n                    cont(addr, port);\r\n                });\r\n                break;\r\n            default:\r\n                that.emit('error', \"Invalid address type\");\r\n                that.socksSocket.destroy();\r\n                break;\r\n            }\r\n        } else {\r\n            switch (status) {\r\n            case 1:\r\n                err = 'SOCKS: general SOCKS server failure';\r\n                break;\r\n            case 2:\r\n                err = 'SOCKS: Connection not allowed by ruleset';\r\n                break;\r\n            case 3:\r\n                err = 'SOCKS: Network unreachable';\r\n                break;\r\n            case 4:\r\n                err = 'SOCKS: Host unreachable';\r\n                break;\r\n            case 5:\r\n                err = 'SOCKS: Connection refused';\r\n                break;\r\n            case 6:\r\n                err = 'SOCKS: TTL expired';\r\n                break;\r\n            case 7:\r\n                err = 'SOCKS: Command not supported';\r\n                break;\r\n            case 8:\r\n                err = 'SOCKS: Address type not supported';\r\n                break;\r\n            default:\r\n                err = 'SOCKS: Unknown error';\r\n            }\r\n            that.emit('error', err);\r\n        }\r\n    });\r\n};\r\n\r\nvar startTLS = function () {\r\n    var that = this;\r\n    var plaintext = tls.connect({\r\n        socket: this.socksSocket,\r\n        rejectUnauthorized: this.remote_options.rejectUnauthorized,\r\n        key: this.remote_options.key,\r\n        cert: this.remote_options.cert,\r\n        requestCert: this.remote_options.requestCert\r\n    });\r\n\r\n    plaintext.on('error', function (err) {\r\n        that.emit('error', err);\r\n    });\r\n\r\n    plaintext.on('secureConnect', function () {\r\n        that.emit('connect');\r\n    });\r\n\r\n    this.outSocket = plaintext;\r\n    this.getPeerCertificate = function(){ return plaintext.getPeerCertificate(); };\r\n\r\n    proxyData.call(this);\r\n};\r\n\r\nvar proxyData = function () {\r\n    var that = this;\r\n\r\n    this.outSocket.on('readable', function () {\r\n        var data;\r\n        while ((data = that.outSocket.read()) !== null) {\r\n            if ((that.push(data)) === false) {\r\n                break;\r\n            }\r\n        }\r\n    });\r\n\r\n    this.outSocket.on('end', function () {\r\n        that.push(null);\r\n    });\r\n\r\n    this.outSocket.on('close', function (had_err) {\r\n        that.emit('close', had_err);\r\n    });\r\n\r\n    this._socksSetup = true;\r\n};\r\n\r\nvar defaults = function(obj) {\r\n    Array.prototype.slice.call(arguments, 1).forEach(function(source) {\r\n        if (source) {\r\n            for (var prop in source) {\r\n                if (obj[prop] === null) {\r\n                    obj[prop] = source[prop];\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return obj;\r\n};\r\n\r\nmodule.exports = SocksConnection;\r\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,0FAA0F,GAAG,oIAAoI;AAAA,QAChP;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,sFAAsF,GAAG,oIAAoI;AAAA,QAC5O;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,oFAAoF,GAAG,oIAAoI;AAAA,QAC1O;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA,KAAC,WAAW;AACV,UAAI,YAAY,QAAQ,UAAU,aAAa,UAAU,aAAa,WAAW;AAEjF,eAAS,CAAC;AAEV,aAAO;AAEP,UAAK,OAAO,WAAW,eAAe,WAAW,QAAS,OAAO,SAAS;AACxE,eAAO,UAAU;AAAA,MACnB,OAAO;AACL,aAAK,QAAQ,IAAI;AAAA,MACnB;AAEA,kBAAY,SAAS,OAAO,QAAQ,UAAU,UAAU;AACtD,YAAI,MAAM;AACV,YAAI,MAAM,WAAW,OAAO,QAAQ;AAClC,gBAAM,IAAI,MAAM,8DAA8D;AAAA,QAChF;AACA,eAAO;AACP,eAAO,WAAW,GAAG;AACnB,kBAAQ,WAAW;AACnB,cAAI,QAAQ,GAAG;AACb,oBAAQ;AAAA,UACV;AACA,cAAI,MAAM,IAAI,KAAK,UAAU,OAAO,IAAI,KAAK,OAAO;AAClD,mBAAO;AAAA,UACT;AACA,sBAAY;AACZ,kBAAQ;AAAA,QACV;AACA,eAAO;AAAA,MACT;AAEA,aAAO,cAAc,SAAS,SAAS,WAAW,aAAa;AAC7D,YAAI,WAAW,cAAc,QAAQ,IAAI;AACzC,YAAI,eAAe,MAAM;AACvB,wBAAc;AAAA,QAChB;AACA,aAAK,aAAa,WAAW;AAC3B,yBAAe,UAAU,SAAS;AAClC,cAAI,SAAS,KAAK,aAAa,CAAC,CAAC,MAAM,kBAAkB;AACvD,2BAAe,CAAC,YAAY;AAAA,UAC9B;AACA,eAAK,KAAK,GAAG,OAAO,aAAa,QAAQ,KAAK,MAAM,MAAM;AACxD,qBAAS,aAAa,EAAE;AACxB,gBAAI,QAAQ,MAAM,MAAM,SAAS,MAAM,GAAG;AACxC,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAEA,aAAO,OAAQ,WAAW;AACxB,iBAAS,KAAK,QAAQ;AACpB,cAAI,OAAO,IAAI;AACf,cAAI,OAAO,WAAW,GAAG;AACvB,kBAAM,IAAI,MAAM,sCAAsC;AAAA,UACxD;AACA,eAAK,KAAK,GAAG,OAAO,OAAO,QAAQ,KAAK,MAAM,MAAM;AAClD,oBAAQ,OAAO,EAAE;AACjB,gBAAI,EAAG,KAAK,SAAS,SAAS,MAAO;AACnC,oBAAM,IAAI,MAAM,8BAA8B;AAAA,YAChD;AAAA,UACF;AACA,eAAK,SAAS;AAAA,QAChB;AAEA,aAAK,UAAU,OAAO,WAAW;AAC/B,iBAAO;AAAA,QACT;AAEA,aAAK,UAAU,WAAW,WAAW;AACnC,iBAAO,KAAK,OAAO,KAAK,GAAG;AAAA,QAC7B;AAEA,aAAK,UAAU,cAAc,WAAW;AACtC,iBAAO,KAAK,OAAO,MAAM,CAAC;AAAA,QAC5B;AAEA,aAAK,UAAU,QAAQ,SAAS,OAAO,WAAW;AAChD,cAAI,MAAM,KAAK,MAAM,QAAQ;AAC3B,kBAAM,IAAI,MAAM,qDAAqD;AAAA,UACvE;AACA,iBAAO,UAAU,KAAK,QAAQ,MAAM,QAAQ,GAAG,SAAS;AAAA,QAC1D;AAEA,aAAK,UAAU,gBAAgB;AAAA,UAC7B,WAAW,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC;AAAA,UAChD,WAAW,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAAA,UACzC,WAAW,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AAAA,UAC5C,UAAU,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAAA,UACxjN;AAEA,aAAK,UAAU,QAAQ,WAAW;AAChC,iBAAO,OAAO,YAAY,MAAM,KAAK,aAAa;AAAA,QACpD;AAEA,aAAK,UAAU,sBAAsB,WAAW;AAC9C,iBAAO,OAAO,KAAK,MAAM,YAAa,KAAK,SAAS,CAAE;AAAA,QACxD;AAEA,eAAO;AAAA,MAET,EAAG;AAEH,iBAAW;AAEX,oBAAc;AAAA,QACZ,WAAW,IAAI,OAAO,MAAM,WAAW,QAAQ,WAAW,QAAQ,WAAW,QAAQ,WAAW,KAAK,GAAG;AAAA,QACxG,WAAW,IAAI,OAAO,MAAM,WAAW,KAAK,GAAG;AAAA,MACjD;AAEA,aAAO,KAAK,SAAS,SAAS,QAAQ;AACpC,YAAI,OAAO,cAAc,MAAM,OAAO;AACtC,uBAAe,SAASA,SAAQ;AAC9B,cAAIA,QAAO,CAAC,MAAM,OAAOA,QAAO,CAAC,MAAM,KAAK;AAC1C,mBAAO,SAASA,SAAQ,CAAC;AAAA,UAC3B,OAAO;AACL,mBAAO,SAASA,OAAM;AAAA,UACxB;AAAA,QACF;AACA,YAAI,QAAQ,OAAO,MAAM,YAAY,SAAS,GAAG;AAC/C,iBAAQ,WAAW;AACjB,gBAAI,IAAI,MAAM,MAAM;AACpB,mBAAO,MAAM,MAAM,GAAG,CAAC;AACvB,uBAAW,CAAC;AACZ,iBAAK,KAAK,GAAG,OAAO,KAAK,QAAQ,KAAK,MAAM,MAAM;AAChD,qBAAO,KAAK,EAAE;AACd,uBAAS,KAAK,aAAa,IAAI,CAAC;AAAA,YAClC;AACA,mBAAO;AAAA,UACT,EAAG;AAAA,QACL,WAAW,QAAQ,OAAO,MAAM,YAAY,SAAS,GAAG;AACtD,kBAAQ,aAAa,MAAM,CAAC,CAAC;AAC7B,iBAAS,WAAW;AAClB,gBAAI,IAAI;AACR,uBAAW,CAAC;AACZ,iBAAK,QAAQ,KAAK,GAAG,MAAM,IAAI,QAAQ,MAAM,GAAG;AAC9C,uBAAS,KAAM,SAAS,QAAS,GAAI;AAAA,YACvC;AACA,mBAAO;AAAA,UACT,EAAG,EAAG,QAAQ;AAAA,QAChB,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO,OAAQ,WAAW;AACxB,iBAAS,KAAK,OAAO;AACnB,cAAI,MAAM,IAAI;AACd,cAAI,MAAM,WAAW,GAAG;AACtB,kBAAM,IAAI,MAAM,qCAAqC;AAAA,UACvD;AACA,eAAK,KAAK,GAAG,OAAO,MAAM,QAAQ,KAAK,MAAM,MAAM;AACjD,mBAAO,MAAM,EAAE;AACf,gBAAI,EAAG,KAAK,QAAQ,QAAQ,QAAU;AACpC,oBAAM,IAAI,MAAM,4CAA4C;AAAA,YAC9D;AAAA,UACF;AACA,eAAK,QAAQ;AAAA,QACf;AAEA,aAAK,UAAU,OAAO,WAAW;AAC/B,iBAAO;AAAA,QACT;AAEA,aAAK,UAAU,WAAW,WAAW;AACnC,cAAI,oBAAoB,MAAM,UAAU,OAAO,aAAa,IAAI;AAChE,yBAAe,WAAW;AACxB,gBAAIC,KAAIC,OAAM,MAAM;AACpB,mBAAO,KAAK;AACZ,uBAAW,CAAC;AACZ,iBAAKD,MAAK,GAAGC,QAAO,KAAK,QAAQD,MAAKC,OAAMD,OAAM;AAChD,qBAAO,KAAKA,GAAE;AACd,uBAAS,KAAK,KAAK,SAAS,EAAE,CAAC;AAAA,YACjC;AACA,mBAAO;AAAA,UACT,GAAG,KAAK,IAAI;AACZ,+BAAqB,CAAC;AACtB,qBAAW,SAASE,OAAM;AACxB,mBAAO,mBAAmB,KAAKA,KAAI;AAAA,UACrC;AACA,kBAAQ;AACR,eAAK,KAAK,GAAG,OAAO,YAAY,QAAQ,KAAK,MAAM,MAAM;AACvD,mBAAO,YAAY,EAAE;AACrB,oBAAQ,OAAO;AAAA,cACb,KAAK;AACH,oBAAI,SAAS,KAAK;AAChB,2BAAS,EAAE;AAAA,gBACb,OAAO;AACL,2BAAS,IAAI;AAAA,gBACf;AACA,wBAAQ;AACR;AAAA,cACF,KAAK;AACH,oBAAI,SAAS,KAAK;AAChB,0BAAQ;AAAA,gBACV,OAAO;AACL,2BAAS,IAAI;AAAA,gBACf;AACA;AAAA,cACF,KAAK;AACH,oBAAI,SAAS,KAAK;AAChB,2BAAS,EAAE;AACX,2BAAS,IAAI;AACb,0BAAQ;AAAA,gBACV;AACA;AAAA,cACF,KAAK;AACH,yBAAS,IAAI;AAAA,YACjB;AAAA,UACF;AACA,cAAI,UAAU,GAAG;AACf,qBAAS,EAAE;AACX,qBAAS,EAAE;AAAA,UACb;AACA,iBAAO,mBAAmB,KAAK,GAAG;AAAA,QACpC;AAEA,aAAK,UAAU,cAAc,WAAW;AACtC,cAAI,OAAO,MAAM,IAAI,MAAM;AAC3B,kBAAQ,CAAC;AACT,iBAAO,KAAK;AACZ,eAAK,KAAK,GAAG,OAAO,KAAK,QAAQ,KAAK,MAAM,MAAM;AAChD,mBAAO,KAAK,EAAE;AACd,kBAAM,KAAK,QAAQ,CAAC;AACpB,kBAAM,KAAK,OAAO,GAAI;AAAA,UACxB;AACA,iBAAO;AAAA,QACT;AAEA,aAAK,UAAU,qBAAqB,WAAW;AAC7C,cAAI;AACJ,kBAAS,WAAW;AAClB,gBAAI,IAAI,MAAM,MAAM;AACpB,mBAAO,KAAK;AACZ,uBAAW,CAAC;AACZ,iBAAK,KAAK,GAAG,OAAO,KAAK,QAAQ,KAAK,MAAM,MAAM;AAChD,qBAAO,KAAK,EAAE;AACd,uBAAS,KAAK,KAAK,SAAS,EAAE,CAAC;AAAA,YACjC;AACA,mBAAO;AAAA,UACT,GAAG,KAAK,IAAI,EAAG,KAAK,GAAG;AAAA,QACzB;AAEA,aAAK,UAAU,QAAQ,SAAS,OAAO,WAAW;AAChD,cAAI,MAAM,KAAK,MAAM,QAAQ;AAC3B,kBAAM,IAAI,MAAM,qDAAqD;AAAA,UACvE;AACA,iBAAO,UAAU,KAAK,OAAO,MAAM,OAAO,IAAI,SAAS;AAAA,QACzD;AAEA,aAAK,UAAU,gBAAgB;AAAA,UAC7B,aAAa,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG;AAAA,UACrD,WAAW,CAAC,IAAI,KAAK,CAAC,OAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;AAAA,UACvD,WAAW,CAAC,IAAI,KAAK,CAAC,OAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAAA,UACtD,UAAU,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG;AAAA,UAClD,aAAa,CAAC,IAAI,KAAK,CAAC,OAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAAA,UACxD,YAAY,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,OAAQ,GAAG,CAAC,CAAC,GAAG,EAAE;AAAA,UACxD,SAAS,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,OAAQ,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;AAAA,UACrD,SAAS,CAAC,IAAI,KAAK,CAAC,KAAM,OAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;AAAA,UACxD,QAAQ,CAAC,IAAI,KAAK,CAAC,MAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;AAAA,UACpD,QAAQ,CAAC,IAAI,KAAK,CAAC,MAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;AAAA,UACpD,UAAU,CAAC,CAAC,IAAI,KAAK,CAAC,MAAQ,MAAO,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AAAA,QAC9D;AAEA,aAAK,UAAU,QAAQ,WAAW;AAChC,iBAAO,OAAO,YAAY,MAAM,KAAK,aAAa;AAAA,QACpD;AAEA,aAAK,UAAU,sBAAsB,WAAW;AAC9C,iBAAO,KAAK,MAAM,MAAM;AAAA,QAC1B;AAEA,aAAK,UAAU,gBAAgB,WAAW;AACxC,cAAI,MAAM,KAAK;AACf,cAAI,CAAC,KAAK,oBAAoB,GAAG;AAC/B,kBAAM,IAAI,MAAM,0DAA0D;AAAA,UAC5E;AACA,iBAAO,KAAK,MAAM,MAAM,EAAE,GAAG,OAAO,KAAK,CAAC,GAAG,MAAM,KAAK,CAAC;AACzD,iBAAO,IAAI,OAAO,KAAK,CAAC,QAAQ,GAAG,OAAO,KAAM,OAAO,GAAG,MAAM,GAAI,CAAC;AAAA,QACvE;AAEA,eAAO;AAAA,MAET,EAAG;AAEH,iBAAW;AAEX,oBAAc;AAAA,QACZ,UAAU,IAAI,OAAO,YAAY,WAAW,wBAAwB,GAAG;AAAA,QACvE,cAAc,IAAI,OAAQ,UAAU,WAAW,gBAAgB,WAAW,SAAU,KAAK,WAAW,QAAQ,WAAW,QAAQ,WAAW,QAAQ,WAAW,MAAM,GAAG;AAAA,MACxK;AAEA,mBAAa,SAAS,QAAQ,OAAO;AACnC,YAAI,YAAY,WAAW,MAAM,aAAa;AAC9C,YAAI,OAAO,QAAQ,IAAI,MAAM,OAAO,YAAY,IAAI,GAAG;AACrD,iBAAO;AAAA,QACT;AACA,qBAAa;AACb,oBAAY;AACZ,gBAAQ,YAAY,OAAO,QAAQ,KAAK,YAAY,CAAC,MAAM,GAAG;AAC5D;AAAA,QACF;AACA,YAAI,OAAO,CAAC,MAAM,KAAK;AACrB;AAAA,QACF;AACA,YAAI,OAAO,OAAO,SAAS,CAAC,MAAM,KAAK;AACrC;AAAA,QACF;AACA,2BAAmB,QAAQ;AAC3B,sBAAc;AACd,eAAO,oBAAoB;AACzB,yBAAe;AAAA,QACjB;AACA,iBAAS,OAAO,QAAQ,MAAM,WAAW;AACzC,YAAI,OAAO,CAAC,MAAM,KAAK;AACrB,mBAAS,OAAO,MAAM,CAAC;AAAA,QACzB;AACA,YAAI,OAAO,OAAO,SAAS,CAAC,MAAM,KAAK;AACrC,mBAAS,OAAO,MAAM,GAAG,EAAE;AAAA,QAC7B;AACA,eAAQ,WAAW;AACjB,cAAI,IAAI,MAAM,MAAM;AACpB,iBAAO,OAAO,MAAM,GAAG;AACvB,qBAAW,CAAC;AACZ,eAAK,KAAK,GAAG,OAAO,KAAK,QAAQ,KAAK,MAAM,MAAM;AAChD,mBAAO,KAAK,EAAE;AACd,qBAAS,KAAK,SAAS,MAAM,EAAE,CAAC;AAAA,UAClC;AACA,iBAAO;AAAA,QACT,EAAG;AAAA,MACL;AAEA,aAAO,KAAK,SAAS,SAAS,QAAQ;AACpC,YAAI,OAAO;AACX,YAAI,OAAO,MAAM,YAAY,QAAQ,CAAC,GAAG;AACvC,iBAAO,WAAW,QAAQ,CAAC;AAAA,QAC7B,WAAW,QAAQ,OAAO,MAAM,YAAY,cAAc,CAAC,GAAG;AAC5D,kBAAQ,WAAW,MAAM,CAAC,EAAE,MAAM,GAAG,EAAE,GAAG,CAAC;AAC3C,cAAI,OAAO;AACT,kBAAM,KAAK,SAAS,MAAM,CAAC,CAAC,KAAK,IAAI,SAAS,MAAM,CAAC,CAAC,CAAC;AACvD,kBAAM,KAAK,SAAS,MAAM,CAAC,CAAC,KAAK,IAAI,SAAS,MAAM,CAAC,CAAC,CAAC;AACvD,mBAAO;AAAA,UACT;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAEA,aAAO,KAAK,SAAS,OAAO,KAAK,SAAS,SAAS,QAAQ;AACzD,eAAO,KAAK,OAAO,MAAM,MAAM;AAAA,MACjC;AAEA,aAAO,KAAK,UAAU,OAAO,KAAK,UAAU,SAAS,QAAQ;AAC3D,YAAI;AACJ,YAAI;AACF,cAAI,KAAK,KAAK,OAAO,MAAM,CAAC;AAC5B,iBAAO;AAAA,QACT,SAAS,QAAQ;AACf,cAAI;AACJ,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO,KAAK,QAAQ,OAAO,KAAK,QAAQ,SAAS,QAAQ;AACvD,YAAI;AACJ,gBAAQ,KAAK,OAAO,MAAM;AAC1B,YAAI,UAAU,MAAM;AAClB,gBAAM,IAAI,MAAM,iDAAiD;AAAA,QACnE;AACA,eAAO,IAAI,KAAK,KAAK;AAAA,MACvB;AAEA,aAAO,UAAU,SAAS,QAAQ;AAChC,eAAO,OAAO,KAAK,QAAQ,MAAM,KAAK,OAAO,KAAK,QAAQ,MAAM;AAAA,MAClE;AAEA,aAAO,QAAQ,SAAS,QAAQ;AAC9B,YAAI,OAAO,KAAK,OAAO,MAAM,GAAG;AAC9B,iBAAO,OAAO,KAAK,MAAM,MAAM;AAAA,QACjC,WAAW,OAAO,KAAK,OAAO,MAAM,GAAG;AACrC,iBAAO,OAAO,KAAK,MAAM,MAAM;AAAA,QACjC,OAAO;AACL,gBAAM,IAAI,MAAM,sDAAsD;AAAA,QACxE;AAAA,MACF;AAEA,aAAO,UAAU,SAAS,QAAQ;AAChC,YAAI;AACJ,eAAO,KAAK,MAAM,MAAM;AACxB,YAAI,KAAK,KAAK,MAAM,UAAU,KAAK,oBAAoB,GAAG;AACxD,iBAAO,KAAK,cAAc;AAAA,QAC5B,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IAEF,GAAG,KAAK,OAAI;AAAA;AAAA;;;AChZZ;AAAA;AAAA,QAAI,SAAU;AAAd,QACI,OAAU;AADd,QAEI,MAAU;AAFd,QAGI,MAAU;AAHd,QAII,SAAU;AAEd,QAAI,kBAAkB,SAAU,gBAAgB,eAAe;AAC3D,UAAI,OAAO;AAEX,aAAO,OAAO,KAAK,IAAI;AAEvB,WAAK,iBAAiB,SAAS,gBAAgB;AAAA,QAC3C,MAAM;AAAA,QACN,KAAK;AAAA,QACL,oBAAoB;AAAA,MACxB,CAAC;AACD,sBAAgB,SAAS,eAAe;AAAA,QACpC,cAAc;AAAA,QACd,eAAe;AAAA,QACf,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,MACV,CAAC;AAED,WAAK,cAAc;AAEnB,WAAK,eAAe;AACpB,WAAK,YAAY;AAEjB,WAAK,cAAc,IAAI,iBAAiB;AAAA,QACpC,MAAM,cAAc;AAAA,QACpB,MAAM,cAAc;AAAA,QACpB,cAAc,cAAc;AAAA,QAC5B,eAAe,cAAc;AAAA,MACjC,GAAG,eAAe,KAAK,MAAM,CAAE,CAAC,cAAc,IAAK,CAAC;AAEpD,WAAK,YAAY,GAAG,SAAS,SAAU,KAAK;AACxC,aAAK,KAAK,SAAS,GAAG;AAAA,MAC1B,CAAC;AAED,gBAAU,KAAK,MAAM,EAAC,MAAM,cAAc,MAAM,MAAM,cAAc,KAAI,CAAC;AAEzE,WAAK,YAAY,KAAK;AAAA,IAC1B;AAEA,SAAK,SAAS,iBAAiB,OAAO,MAAM;AAE5C,oBAAgB,UAAU,SAAU,gBAAgB,eAAe,qBAAqB;AACpF,UAAI,mBAAmB,IAAI,gBAAgB,gBAAgB,aAAa;AACxE,UAAI,OAAO,wBAAwB,YAAY;AAC3C,yBAAiB,GAAG,WAAW,mBAAmB;AAAA,MACtD;AACA,aAAO;AAAA,IACX;AAEA,oBAAgB,UAAU,QAAQ,WAAY;AAC1C,UAAI;AACJ,UAAI,KAAK,aAAa;AAClB,gBAAQ,OAAO,KAAK,UAAU,KAAK,OAAO,MAAM;AAC5C,cAAK,KAAK,KAAK,IAAI,MAAO,OAAO;AAC7B;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ,OAAO;AACH,aAAK,KAAK,EAAE;AAAA,MAChB;AAAA,IACJ;AAEA,oBAAgB,UAAU,SAAS,SAAU,OAAO,UAAU,UAAU;AACpE,UAAI,KAAK,aAAa;AAClB,aAAK,UAAU,MAAM,OAAO,QAAQ,QAAQ;AAAA,MAChD,OAAO;AACH,iBAAS,eAAe;AAAA,MAC5B;AAAA,IACJ;AAEA,oBAAgB,UAAU,UAAU,WAAY;AAC5C,WAAK,UAAU,QAAQ;AACvB,WAAK,UAAU,mBAAmB;AAClC,UAAI,KAAK,cAAc,KAAK,aAAa;AACrC,aAAK,YAAY,QAAQ;AACzB,aAAK,YAAY,mBAAmB;AAAA,MACxC;AACA,WAAK,mBAAmB;AAAA,IAC5B;AAEA,QAAI,UAAU,SAAU,QAAQ,OAAO,UAAU;AAC7C,UAAI,YAAY,WAAY;AACxB,YAAI,OAAO,OAAO,KAAK,KAAK;AAC5B,YAAI,SAAS,MAAM;AACf,iBAAO,eAAe,YAAY,SAAS;AAC3C,mBAAS,IAAI;AAAA,QACjB,OAAO;AACH,iBAAO,GAAG,YAAY,SAAS;AAAA,QACnC;AAAA,MACJ;AACA,gBAAU;AAAA,IACd;AAEA,QAAI,iBAAiB,SAAU,MAAM;AACjC,UAAI,MAAM;AACN,aAAK,YAAY,MAAM,OAAkB;AAAA,MAE7C,OAAO;AACH,aAAK,YAAY,MAAM,MAAc;AAAA,MACzC;AAAA,IAEJ;AAEA,QAAI,YAAY,SAAU,MAAM;AAC5B,UAAI,OAAO;AACX,cAAQ,KAAK,aAAa,GAAG,SAAU,MAAM;AACzC,YAAI,KAAK,UAAU,CAAC,MAAM,GAAG;AACzB,eAAK,KAAK,SAAS,mCAAmC;AACtD,eAAK,YAAY,QAAQ;AACzB;AAAA,QACJ;AACA,gBAAQ,KAAK,UAAU,CAAC,GAAG;AAAA,UAC3B,KAAK;AACD,iBAAK,KAAK,SAAS,6CAA6C;AAChE,iBAAK,YAAY,QAAQ;AACzB;AAAA,UACJ,KAAK;AACD,iBAAK,YAAY,MAAM,OAAO,OAAO;AAAA,cACjC,IAAI,OAAO,CAAC,CAAC,CAAC;AAAA,cACd,IAAI,OAAO,CAAC,OAAO,WAAW,KAAK,IAAI,CAAC,CAAC;AAAA,cACzC,IAAI,OAAO,KAAK,IAAI;AAAA,cACpB,IAAI,OAAO,CAAC,OAAO,WAAW,KAAK,IAAI,CAAC,CAAC;AAAA,cACzC,IAAI,OAAO,KAAK,IAAI;AAAA,YACxB,CAAC,CAAC;AACF,4BAAgB,KAAK,IAAI;AACzB;AAAA,UACJ;AACI,yBAAa,KAAK,MAAM,KAAK,eAAe,MAAM,KAAK,eAAe,IAAI;AAAA,QAC9E;AAAA,MACJ,CAAC;AAAA,IACL;AAEA,QAAI,kBAAkB,SAAU,MAAM;AAClC,UAAI,OAAO;AACX,cAAQ,KAAK,aAAa,GAAG,SAAUC,OAAM;AACzC,YAAIA,MAAK,UAAU,CAAC,MAAM,GAAG;AACzB,uBAAa,KAAK,MAAM,KAAK,eAAe,MAAM,KAAK,eAAe,IAAI;AAAA,QAC9E,OAAO;AACH,eAAK,KAAK,SAAS,8BAA8B;AACjD,eAAK,YAAY,QAAQ;AAAA,QAC7B;AAAA,MACJ,CAAC;AAAA,IACL;AAEA,QAAI,eAAe,SAAU,MAAM,MAAM;AACrC,UAAI,QAAQ,MAAM,SAAS;AAC3B,UAAI,IAAI,KAAK,IAAI,GAAG;AAChB,YAAI,IAAI,OAAO,IAAI,GAAG;AAClB,iBAAO,IAAI,OAAO,CAAC,CAAC,CAAC;AAAA,QACzB,WAAW,IAAI,OAAO,IAAI,GAAG;AACzB,iBAAO,IAAI,OAAO,CAAC,CAAC,CAAC;AAAA,QACzB;AACA,kBAAU,IAAI,OAAO,OAAO,MAAM,IAAI,EAAE,YAAY,CAAC;AAAA,MACzD,OAAO;AACH,eAAO,IAAI,OAAO,CAAC,CAAC,CAAC;AACrB,kBAAU,IAAI,OAAO,IAAI;AACzB,kBAAU,OAAO,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,WAAW,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC;AAAA,MAC5E;AACA,eAAS,IAAI,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;AAC7B,gBAAU,IAAI,OAAO,CAAC;AACtB,cAAQ,cAAc,MAAM,CAAC;AAC7B,WAAK,YAAY,MAAM,OAAO,OAAO,CAAC,QAAQ,MAAM,SAAS,OAAO,CAAC,CAAC;AACtE,iBAAW,KAAK,IAAI;AAAA,IACxB;AAEA,QAAI,aAAa,SAAU,MAAM;AAC7B,UAAI,OAAO;AACX,cAAQ,KAAK,aAAa,GAAG,SAAUA,OAAM;AACzC,YAAI,QAAQ,KAAK;AAEjB,eAAO,SAAU,MAAM,MAAM;AACzB,eAAK,eAAe;AACpB,eAAK,YAAY;AAEjB,cAAI,KAAK,eAAe,KAAK;AACzB,qBAAS,KAAK,IAAI;AAAA,UACtB,OAAO;AACH,sBAAU,KAAK,IAAI;AACnB,iBAAK,KAAK,SAAS;AAAA,UACvB;AAAA,QACJ;AACA,iBAASA,MAAK,UAAU,CAAC;AACzB,YAAI,WAAW,GAAG;AACd,kBAAOA,MAAK,UAAU,CAAC,GAAG;AAAA,YAC1B,KAAK;AACD,sBAAQ,KAAK,aAAa,GAAG,SAAUC,QAAO;AAC1C,oBAAI,OAAO,IAAI,MAAM;AACrB,qBAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACpB,sBAAI,MAAM,GAAG;AACT,4BAAQ;AAAA,kBACZ;AACA,0BAAQA,OAAM,UAAU,CAAC,EAAE,SAAS;AAAA,gBACxC;AACA,uBAAOA,OAAM,aAAa,CAAC;AAC3B,qBAAK,MAAM,IAAI;AAAA,cACnB,CAAC;AACD;AAAA,YACJ,KAAK;AACD,sBAAQ,KAAK,aAAa,GAAG,SAAUA,QAAO;AAC1C,oBAAI,SAASA,OAAM,UAAU,CAAC;AAC9B,wBAAQ,KAAK,aAAa,SAAS,GAAG,SAAU,OAAO;AACnD,sBAAI,MAAM;AACV,yBAAQ,MAAM,MAAM,GAAG,EAAE,EAAG,SAAS;AACrC,yBAAO,MAAM,aAAa,MAAM;AAChC,uBAAK,MAAM,IAAI;AAAA,gBACnB,CAAC;AAAA,cACL,CAAC;AACD;AAAA,YACJ,KAAK;AACD,sBAAQ,KAAK,aAAa,IAAI,SAAUA,QAAO;AAC3C,oBAAI,OAAO,IAAI,MAAM;AACrB,qBAAK,IAAI,GAAG,IAAI,IAAI,KAAK;AACrB,sBAAI,MAAM,GAAG;AACT,4BAAQ;AAAA,kBACZ;AACA,0BAAQA,OAAM,UAAU,CAAC;AAAA,gBAC7B;AACA,uBAAOA,OAAM,aAAa,EAAE;AAC5B,qBAAK,MAAM,IAAI;AAAA,cACnB,CAAC;AACD;AAAA,YACJ;AACI,mBAAK,KAAK,SAAS,sBAAsB;AACzC,mBAAK,YAAY,QAAQ;AACzB;AAAA,UACJ;AAAA,QACJ,OAAO;AACH,kBAAQ,QAAQ;AAAA,YAChB,KAAK;AACD,oBAAM;AACN;AAAA,YACJ,KAAK;AACD,oBAAM;AACN;AAAA,YACJ,KAAK;AACD,oBAAM;AACN;AAAA,YACJ,KAAK;AACD,oBAAM;AACN;AAAA,YACJ,KAAK;AACD,oBAAM;AACN;AAAA,YACJ,KAAK;AACD,oBAAM;AACN;AAAA,YACJ,KAAK;AACD,oBAAM;AACN;AAAA,YACJ,KAAK;AACD,oBAAM;AACN;AAAA,YACJ;AACI,oBAAM;AAAA,UACV;AACA,eAAK,KAAK,SAAS,GAAG;AAAA,QAC1B;AAAA,MACJ,CAAC;AAAA,IACL;AAEA,QAAI,WAAW,WAAY;AACvB,UAAI,OAAO;AACX,UAAI,YAAY,IAAI,QAAQ;AAAA,QACxB,QAAQ,KAAK;AAAA,QACb,oBAAoB,KAAK,eAAe;AAAA,QACxC,KAAK,KAAK,eAAe;AAAA,QACzB,MAAM,KAAK,eAAe;AAAA,QAC1B,aAAa,KAAK,eAAe;AAAA,MACrC,CAAC;AAED,gBAAU,GAAG,SAAS,SAAU,KAAK;AACjC,aAAK,KAAK,SAAS,GAAG;AAAA,MAC1B,CAAC;AAED,gBAAU,GAAG,iBAAiB,WAAY;AACtC,aAAK,KAAK,SAAS;AAAA,MACvB,CAAC;AAED,WAAK,YAAY;AACjB,WAAK,qBAAqB,WAAU;AAAE,eAAO,UAAU,mBAAmB;AAAA,MAAG;AAE7E,gBAAU,KAAK,IAAI;AAAA,IACvB;AAEA,QAAI,YAAY,WAAY;AACxB,UAAI,OAAO;AAEX,WAAK,UAAU,GAAG,YAAY,WAAY;AACtC,YAAI;AACJ,gBAAQ,OAAO,KAAK,UAAU,KAAK,OAAO,MAAM;AAC5C,cAAK,KAAK,KAAK,IAAI,MAAO,OAAO;AAC7B;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ,CAAC;AAED,WAAK,UAAU,GAAG,OAAO,WAAY;AACjC,aAAK,KAAK,IAAI;AAAA,MAClB,CAAC;AAED,WAAK,UAAU,GAAG,SAAS,SAAU,SAAS;AAC1C,aAAK,KAAK,SAAS,OAAO;AAAA,MAC9B,CAAC;AAED,WAAK,cAAc;AAAA,IACvB;AAEA,QAAI,WAAW,SAAS,KAAK;AACzB,YAAM,UAAU,MAAM,KAAK,WAAW,CAAC,EAAE,QAAQ,SAAS,QAAQ;AAC9D,YAAI,QAAQ;AACR,mBAAS,QAAQ,QAAQ;AACrB,gBAAI,IAAI,IAAI,MAAM,MAAM;AACpB,kBAAI,IAAI,IAAI,OAAO,IAAI;AAAA,YAC3B;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": ["string", "_i", "_len", "part", "data", "data2"]
}
